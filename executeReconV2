for (InputFiles file : processExecute.getInputFiles()) {
    Path safePath = safeDir.resolve(file.getFullName()).normalize();

    if (!safePath.startsWith(safeDir)) {
        logger.warn("No se puede cargar el archivo: {}", file.getFullName());
        continue;
    }

    // ✅ ahora usamos solo nombres validados
    if (!sanitizedFileNames.contains(safePath.getFileName().toString())) {
        logger.warn("El archivo {} no se encuentra en la lista segura", file.getFullName());
        continue;
    }

    File archRecon = this.getInsumo(safePath.getFileName().toString(), multiFiles);
    if (archRecon == null) {
        continue;
    }

    // ... resto de tu lógica
}


// Directorio seguro
Path safeDir = Paths.get(UPLOAD_DIRECTORY).toAbsolutePath().normalize();

// Lista segura de nombres de archivos
List<String> sanitizedFileNames = new ArrayList<>();

if (multiFiles != null) {
    for (MultipartFile multi : new ArrayList<>(multiFiles)) {
        if (multi == null || multi.getOriginalFilename() == null) {
            continue;
        }

        Path safePath = safeDir.resolve(multi.getOriginalFilename()).normalize();

        if (!safePath.startsWith(safeDir)) {
            logger.warn("No se puede cargar el archivo: {}", multi.getOriginalFilename());
            continue;
        }

        // Guardamos solo el nombre validado, no el MultipartFile original
        sanitizedFileNames.add(safePath.getFileName().toString());
    }
}
